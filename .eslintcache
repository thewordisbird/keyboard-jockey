[{"/Users/justinbird/Code/keyboard-jockey/src/reportWebVitals.js":"1","/Users/justinbird/Code/keyboard-jockey/src/components/StatusBar.js":"2","/Users/justinbird/Code/keyboard-jockey/src/App.js":"3","/Users/justinbird/Code/keyboard-jockey/src/components/Passage.js":"4","/Users/justinbird/Code/keyboard-jockey/src/index.js":"5"},{"size":362,"mtime":1609804096803,"results":"6","hashOfConfig":"7"},{"size":1076,"mtime":1609816988730,"results":"8","hashOfConfig":"7"},{"size":377,"mtime":1609908047352,"results":"9","hashOfConfig":"7"},{"size":3879,"mtime":1609982504827,"results":"10","hashOfConfig":"7"},{"size":500,"mtime":1609804096802,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8butvd",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/justinbird/Code/keyboard-jockey/src/reportWebVitals.js",[],"/Users/justinbird/Code/keyboard-jockey/src/components/StatusBar.js",["23"],"import React, { useState, useEffect, useRef } from 'react';\n\n\nconst StatusBar = ({ children }) => {\n  const [pos, setPos] = useState(0)\n  const [inc, setInc] = useState(10)\n\n  // TODO: Make position a scale to cover the entire box for dynamic sizing\n  const buttonEl = useRef()\n  const animateEl = useRef()\n  const handleClick = () => {\n    // Move increment the position by the increment\n    setPos(p => {\n      if (p + inc > 370){\n        return 370\n      } else {\n        return p + inc\n      }\n    })\n  }\n\n  useEffect(() => {\n    // animate element movement from current pos to state pos\n    animateEl.current.animate([\n      { transform: `translateX(${pos}px)`}\n    ], {\n      duration: 1000,\n      fill: \"forwards\"\n      },\n    )\n  }, [pos])\n  \n  return (\n    <div className=\"App-track\">\n      <div className=\"App-status-bar\">\n        <div ref={animateEl} className=\"App-animate-avitar\">{ children }</div>\n      </div>\n      <div>\n        <button ref={buttonEl} onClick={handleClick}>Click to Move</button>\n      </div>\n      \n    </div>\n  )\n}\n\nexport default StatusBar;","/Users/justinbird/Code/keyboard-jockey/src/App.js",[],"/Users/justinbird/Code/keyboard-jockey/src/components/Passage.js",["24"],"/Users/justinbird/Code/keyboard-jockey/src/index.js",[],{"ruleId":"25","severity":1,"message":"26","line":6,"column":15,"nodeType":"27","messageId":"28","endLine":6,"endColumn":21},{"ruleId":"25","severity":1,"message":"29","line":30,"column":9,"nodeType":"27","messageId":"28","endLine":30,"endColumn":14},"no-unused-vars","'setInc' is assigned a value but never used.","Identifier","unusedVar","'state' is assigned a value but never used."]